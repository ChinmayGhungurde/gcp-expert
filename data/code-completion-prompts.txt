Vertex AI
Documentation
Generative AI
Was this helpful?
Send feedback
Create prompts for code completion
On this page
Use cases
Supported model
How to submit a code completion prompt
Submit a prompt (console)
Submit a prompt with curl (REST)
Example code completion prompts
Prompt to complete a code function
Prompt to complete a test function
The Vertex AI Codey APIs include the code completion API, which supports code suggestions based on code that's recently written. Use the generative AI foundation model named code-gecko to interact with the code completion API. This topic helps you learn how to create prompts to work with the code-gecko model to create code completion suggestions.
Use cases
Use the code completion API to integrate the code-gecko model and its code completion functionality into an IDE. Some common use cases for code completion are:
Write code faster: Use the code-gecko model to write code faster by taking advantage of code suggested for you.
Minimize bugs in code: Use code suggestions that you know are syntactically correct to avoid errors. Code completion helps you minimize the risk of accidentally introducing bugs that can occur when you write code.
Supported model
The following model supports code completion tasks:
code-gecko
How to submit a code completion prompt
You can submit a code completion prompt in the Generative AI Studio, as a REST command, or using Python.
When you submit a prompt, you need to specify values for the temperature and maximum output tokens. For more information, see Code completion model parameters.
Submit a prompt (console)
To run and test a code completion prompt, use the code-gecko model in Generative AI Studio. For more information about Generative AI Studio, see Introduction to Generative AI Studio.
Do the following to use Generative AI Studio to submit a code completion prompt:
Go to the Generative AI Studio page from the Vertex AI section in the Google Cloud console. Generative AI Studio
On the Language card, click Open.
On Design and test your own prompts, click Code prompt.
In Model, select the model with the name that begins with code-gecko. A three digit number after code-gecko indicates the version number of the model. For example, code-gecko@001 is the name of version one of the code completion model.
In Prompt, enter a code completion prompt.
Adjust Temperature and Token limit to experiment with how they affect the response. For more information, see Code completion model parameters.
Click Submit to generate a response.
Submit a prompt with curl (REST)
Do the following to use curl submit a code completion prompt:
Log in to the Google Cloud CLI with your user account by doing one of the following:
Run gcloud init or gcloud auth login
Use Cloud Shell, which logs you into the gcloud CLI. You can check the currently active account by running gcloud auth list.
Create a JSON file named request.json.
Enter the following code in request.json.
{
  "instances": {
    "prefix": "
PROMPT"
  },
  "parameters": {
    "temperature": 
TEMPERATURE,
    "maxOutputTokens": 
MAX_OUTPUT_TOKENS,
    "candidateCount": 
CANDIDATE_COUNT
  }
}
In response.json, replace PROMPT and specify your parameters for temperature, and maximum output tokens. For more information, see Code completion model parameters.
In your shell, run the following command. Replace PROJECT_ID with your project ID.
curl -X POST \
    -H "Authorization: Bearer $(gcloud auth print-access-token)" \
    -H "Content-Type: application/json; charset=utf-8" \
    -d @request.json \
    "https://us-central1-aiplatform.googleapis.com/v1/projects/
PROJECT_ID/locations/us-central1/publishers/google/models/code-gecko:predict"
Example code completion prompts
Use the following examples to learn how to design code completion prompts.
Prompt to complete a code function
Prompt to complete a test function
Prompt to complete a code function
You can use the code completion model to complete a code definition. The following prompt generates code that completes a partially typed code definition:
Prompt:
def reverse_string(s):
  
Response:
"""
   :type s: str
   :rtype: str
   """
  
Prompt to complete a test function
You can use the code completion model to complete a test function. The following prompt generates code that completes a test function. The function in the response, test_empty_input_string, tests the reverse_string function.
Prompt:
def reverse_string(s):
    return s[::-1]
def test_empty_input_string()
  
Response:
-> None:
    assert reverse_string("") == ""
def test_one_character_string() -> None:
    assert reverse_string("a") == "a"
def test_two_character_string() -> None:
  
What's next
Learn how to create code chat prompts.
Learn how to create code generation prompts.
Learn about responsible AI best practices and Vertex AI's safety filters.
Learn about streaming responses from a model.
Was this helpful?
Send feedback