Vertex AI
Documentation
Generative AI
Was this helpful?
Send feedback
Base64 encode and decode files
bookmark_border
On this page
Base64 encode images
Using the command line
Using client libraries
Base64 decode images
Base64 encode images
To make image generation requests you must send image data as Base64 encoded text.
Using the command line
Within a gRPC request, you can simply write binary data out directly; however, JSON is used when making a REST request. JSON is a text format that does not directly support binary data, so you will need to convert such binary data into text using Base64 encoding.
Most development environments contain a native base64 utility to encode a binary into ASCII text data. To encode a file:
Linux
macOS
Windows
PowerShell
Encode the file using the base64 command line tool, making sure to prevent line-wrapping by using the -w 0 flag:
base64 
INPUT_FILE -w 0 > 
OUTPUT_FILE
Create a JSON request file, inlining the base64-encoded data:
JSON
{
  "instances": [
    {
      "prompt": "
TEXT_PROMPT",
      "image": {
        "bytes_base64_encoded": "
B64_BASE_IMAGE"
      }
    }
  ]
}
Using client libraries
Embedding binary data into requests through text editors is neither desirable or practical. In practice, you will be embedding base64 encoded files within client code. All supported programming languages have built-in mechanisms for base64 encoding content.
Python
Node.js
Java
Go
# Import the base64 encoding library.
import base64

# Pass the image data to an encoding function.
def encode_image(image):
    with open(image, "rb") as image_file:
        encoded_string = base64.b64encode(image_file.read())
    return encoded_string




























Base64 decode images
API requests return generated or edited images as base64-encoded strings. You can use the following client library samples to decode this data and save it locally as an image file.
Python
Node.js
Java
Go
# Import the base64 encoding library.
import base64

# Pass the base64 encoded image data to a decoding function and save image file.
def decode_image(b64_encoded_string):
   with open("b64DecodedImage.png", "wb") as fh:
     fh.write(base64.decodebytes(b64_encoded_string))





















































Was this helpful?
Send feedback